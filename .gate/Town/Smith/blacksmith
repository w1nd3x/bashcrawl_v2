#!/bin/bash
#
# If you are reading this, you have wandered out of bounds
# and are reading the code that drives the game.
#
#                    Congratulations!
#
# Learning Linux is all about curiosity, so read this code and see
# if you can figure out what it does.
#
# When you're ready to continue playing the game, though, stick to
# the scrolls. If you're stuck, ask your instructor.
# We're happy to provide hints.
#
# 

blacksmith_start() {
	cat << EOF
The blacksmith, a formidable figure with thick, well-worn glasses pressed onto 
his wrinkled, fire-braised face, ambles around the shop as you enter. He seems 
the type of man to work his way around the shop with ease, but right now he's 
moving erratically. Upon stepping into the shop, you realize that the floor is 
covered in a thick layer of soot, concentrated most around the hulking forge on 
the back wall. 

Heat eminates from the forge, but the blacksmith seems unaffected by the 
temperature as he flips sheets of metal strewn across the workbenches. It takes 
him a minute to realize you have walked in, and when you do, the lines of worry 
creased onto his forehead seem to lessen.

He explains the haphazard state of his shop; he has just been robbed, and 
cannot locate his anvil. They haven't found the person who took it yet, but the 
sheriff has managed to apprehend some suspects at the station. He implores you 
to go down to the station, as the sheriff is hopelessly overworked.

EOF

}

blacksmith_waiting() {
	cat << EOF

The shop is turned upside-down as the blacksmith continues to search for his
anvil. When he sees you, he just shakes his head and expresses his woes, 
insisting that you continue the search for his anvil and to leave him to his 
disheveled shop.

EOF
}

blacksmith_success() {
	cat << EOF

The blacksmith is overjoyed to get his anvil back, but as he moves to light his
forge his joy turns once again to sadness.  When you ask what the problem is he
confides that while his anvil was missing he failed to keep up with his daily 
preventive maintenance on the forge.  Now it's full of garbage instead of the 
high quality coal that he needs.

He has a bin at the side of the room filled with 'High-Quality Coal', but he
hasn't cleaned up that either.  He asks you to move all the 'High-Quality Coal'
from the bin and move it into the forge.

EOF
}

blacksmith_complete() {
	cat << EOF

The blacksmith stands next to you and smiles at the forge. He pats you on the 
back approvingly and almost knocks you into the forge.

He thanks you and tears up for a moment telling you he wishes he could let his
mom know.  She lives in the city and he just doesn't have the time to go and 
detail this arduous experience.

Within minutes he is already putting the recovered anvil and restored forge to 
good use. As you leave the building, you can hear the loud sounds of metal on 
metal. You hope you can find something that speaks to you like smithing speaks 
to that man.

EOF
}

blacksmith_try_again() {
	cat << EOF

The blacksmith stands next to you and frowns down at the forge.  He tells you 
that in no uncertain terms is this forge fit for work yet.  He recommends you 
review some of the commands you've used up until now.

EOF

}

blacksmith_done() {
	cat << EOF

The blacksmith looks up from his forge and smiles as you enter.  He laments
that he has no way to let his mom know about how much you've helped him as she
lives all the way in the city and he just doesn't have the time to step away
and let her know.

You may try heading to the 'City' yourself.

EOF

}



generate_coal() {
	# generate garbage first
	for i in $(seq 1 $(expr $(expr $RANDOM % 8) + 3)); do
		echo $RANDOM | md5sum | head -c 32 >> bin
		echo $RANDOM | md5sum | head -c 32 >> bin
		echo "" >> bin
	done

	# Now generate some High-Quality Coal and intersperse it with
	# other types of coal
	for i in $(seq 1 $(expr $(expr $RANDOM % 100) + 50)); do
		echo "High-Quality Coal" >> bin
		if [ $(($RANDOM % 4)) = 0 ]; then echo "Low-Quality Coal" >> bin; fi
		if [ $(($RANDOM % 4)) = 0 ]; then echo "Coal" >> bin; fi
		if [ $(($RANDOM % 4)) = 0 ]; then echo "Medium-Quality Coal" >> bin; fi
		if [ $(($RANDOM % 4)) = 0 ]; then echo "Just Really Bad Coal" >> bin; fi
	done

	# generate some garbage at the end
	for i in $(seq 1 $(expr $(expr $RANDOM % 8) + 3)); do
		echo $RANDOM | md5sum | head -c 32 >> bin
		echo $RANDOM | md5sum | head -c 32 >> bin
		echo "" >> bin
	done
}

if ! test -f anvil.txt; then
	if ! test -f .blacksmith_quest_begun; then
		blacksmith_start
		touch .blacksmith_quest_begun
	else
		blacksmith_waiting
	fi
elif ! test -f .coal; then
	blacksmith_success
	generate_coal
	touch .coal
elif ! test -f .done; then
	grep "High-Quality Coal" bin > .forge.tmp
	DIFF=$(diff .forge.tmp forge)
	rm .forge.tmp
	if [ -z "$DIFF" ]; then
		blacksmith_complete
		touch .done
	else
		blacksmith_try_again
	fi
else
	blacksmith_done
fi

#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# Hmm, that didn't work.
