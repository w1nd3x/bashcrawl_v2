#!/bin/bash
#
# If you are reading this, you have wandered out of bounds
# and are reading the code that drives the game.
#
#                    Congratulations!
#
# Learning Linux is all about curiosity, so read this code and see
# if you can figure out what it does.
#
# When you're ready to continue playing the game, though, stick to
# the scrolls. If you're stuck, ask your instructor.
# We're happy to provide hints.
#
# 

come_back() {
	cat << EOF

When you walk into the police station, the sheriff looks up at you. Upon 
deciding that she doesn't recognize you, she asks if you're coming from the 
blacksmith. 

When you say no, she grunts and says to come back once you've spoken to him. 
She doesn't have time to waste on another project.

EOF

}
sheriff_intro() {
	cat << EOF

You enter the Police Station, where a single desk sits between you and a long, 
dimly lit hallway. A lone woman sits at the desk, head resting on one hand 
while the other lazily shifts a mouse around an ancient monitor screen.

Beyond the desk one of the lights flickers out, before coming back on a second 
later. You can hear the sounds of something shuffling around down the hall, as 
well as what sounds like someone furiously writing.

When the woman sees you, she puts both hands on the desk and uses them to stand
as though her legs alone couldn't have done the job. The badge on her chest is 
slightly lopsided, and she puffs her cheeks to let out an anticipitory sigh 
before introducing herself to you.

Right now, she's in a frenzy, and the "dang computer" is broke to boot. The 
blacksmith is driving her up the wall pestering her about his anvil, and she's 
willing to do just about anything to get him off her case.  Are you willing to
help? (y / n)

EOF

}

sheriff_case() {
	cat << EOF

The sheriff hasn't been sitting around doing nothing.  She's done her best to 
narrow down the list to three suspects:

*head-case Henry, a regular of the cells down the hall. He's done just about 
everything you can do to end up in the clink.

*tail-bone Teresa, an old accomplice of Henry's who recently returned to town 
after a stint pick-pocketing tourists in the big city.

*sort-a uniq-ue Sam, a complete unknown who's vocabulary consists of a few 
phrases, repeated ad nauseam.

She asks if you could talk to them, and possibly make sense of their 
statements. It's pretty difficult to understand what they are saying on the 
best of days, and this is far from that.

*******************************************************************************
> You will receive statements from all three of the suspects, but only the 
  proper one should be redirected into the confession.txt file.
> All statements should be piped into the 'statment.txt' file in the Cell_[num] 
  directory. After creating each statement file, return to talk to the sheriff 
  to confirm that you properly formatted the statement.
> You must use terminal commands to parse the lunatic's ramblings so you only 
  have their statement, and nothing else. It would be poor form to waste the 
  sheriff's time!
> Once one of your 'statement.txt' files contains the confession, copy it to 
  this directory with the name 'confession.txt'
> There's a helpful officer in the cells if you're having trouble getting a 
  coherent statement from any of them.
*******************************************************************************

EOF
}

have_a_heart() {
	cat << EOF

The sheriff stares at you with dead eyes. It's clear that this case has been 
wearing on the sheriff since it started.  Maybe you should reconsider giving 
her your help.

EOF
}

henry_good() {
	cat << EOF

Nicely done getting head-case Henry's statement, and properly formatted too. 
Remember to drop it on my desk [in this directory] as a confession 
[named confession.txt] if he was the culprit. He's a slippery one.	

EOF
}

teresa_good() {
	cat << EOF

Nicely done getting tail-bone Teresa's statement, and properly formatted too. 
Remember to drop it on my desk [in this directory] as a confession 
[named confession.txt] if she was the culprit. She's a wiley one.	

EOF
}

sam_good() {
	cat << EOF

Nicely done getting sort-a uniq-ue Sam's statement, and properly formatted too. 
Remember to drop it on my desk [in this directory] as a confession 
[named confession.txt] if he was the culprit. He's a strange one.	

EOF
}

statement_bad() {
	cat << EOF

Looks like you don't quite have $1's statement quite right. 
You mind going back there and trying to get something out of them?

EOF
}

sheriff_sad() {
	cat << EOF

The sheriff is reading over the confession when you walk up to her desk. She's 
shaking her head and clicking her tongue, with an even larger than usual frown 
on her face. As it turns out, the carpenter's her brother, and it's rocked her 
to the core to see him mixed up in something like this. 

That doesn't mean she's not ready to do what needs to be done, however, and she 
tasks you with the unfortunate duty of questioning the carpenter and finding 
the anvil. She gives you an offiical arrest warrant, a large piece of paper 
with all sorts of formalities on it. After she's done talking to you, she puts 
her head in her hands and lets out a deep sigh. It's clear that's all you're 
going to get from her.

EOF
}

if ! test -f ../Smith/.blacksmith_quest_begun ; then
	come_back
elif ! test -f .sheriff_intro; then
	sheriff_intro
	read RESP
	if [ $RESP = 'y' ] || [ $RESP = 'Y' ]; then
		touch .sheriff_intro
		sheriff_case
	else
		have_a_heart
	fi
elif ! test -f confession.txt ; then
	if test -f Hallway/Cell_1/statement.txt ; then
		Hallway/Cell_1/head-case_henry | head -n 7 > .henry.tmp
		DIFF=$(diff .henry.tmp Hallway/Cell_1/statement.txt)
		rm .henry.tmp
		if [ -z $DIFF ] ; then
			henry_good
		else
			statement_bad "Henry"
		fi
	fi
	if test -f Hallway/Cell_2/statement.txt ; then
		Hallway/Cell_2/tail-bone_teresa | tail -n 9 > .teresa.tmp
		DIFF=$(diff .teresa.tmp Hallway/Cell_2/statement.txt)
		rm .teresa.tmp
		if [ -z $DIFF ] ; then
			teresa_good
		else
			statement_bad "Teresa"
		fi
	fi
	if test -f Hallway/Cell_3/statement.txt ; then
		Hallway/Cell_3/sort-a-uniq-ue-sam | sort | uniq > .sam.tmp
		DIFF=$(diff .sam.tmp Hallway/Cell_3/statement.txt)
		rm .sam.tmp
		if [ -z $DIFF ]; then
			sam_good
		else
			statement_bad "Sam"
		fi
	fi
	printf "\n\nThe sheriff looks up, back down, then continues to idly click around the computer.\n\n"

elif ! test -f .sheriff_sad ; then
	sheriff_sad
touch .sheriff_sad

else
	echo "The sheriff doesn't even look up from her work when you walk in."
	echo "\nMaybe you should try your luck in the 'City'"
fi

#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# Hmm, that didn't work.