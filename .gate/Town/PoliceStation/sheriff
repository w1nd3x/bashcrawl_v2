#!/bin/bash
#
# If you are reading this, you have wandered out of bounds
# and are reading the code that drives the game.
#
#                    Congratulations!
#
# Learning Linux is all about curiosity, so read this code and see
# if you can figure out what it does.
#
# When you're ready to continue playing the game, though, stick to
# the scrolls. If you're stuck, ask your instructor.
# We're happy to provide hints.
#
# 
if ! test -f ../Smith/.blacksmith_quest_begun ; then
	cat << come_back
When you walk into the police station, the sheriff looks up at you. Upon deciding that she 
doesn't recognize you, she asks if you're coming from the blacksmith. 

When you say no, she grunts and says to come back once you've spoken to him. She doesn't have time to waste on
another project.
come_back
elif ! test -f .sheriff_intro; then
	cat << sheriff_intro
You enter the Police Station, where a single desk sits between you and a long, dimly lit hallway.
A lone woman sits at the desk, head resting on one hand while the other lazily shifts a mouse 
around an ancient monitor screen. The light of the screen exposes shiny, purple bags under her eyes, 
but also deep, well-worn laugh lines on her face.

Beyond the desk one of the lights flickers out, before coming back on a second later. 
You can hear the sounds of something shuffling around down the hall, as well as what 
sounds like someone furiously writing.

When the woman sees you, she puts both hands on the desk and uses them to stand as though her legs alone 
couldn't have done the job. The badge on her chest is slightly lopsided, and she puffs her cheeks to
let out an anticipitory sigh before introducing herself to you.

As the sheriff of this town, the intensity of her work whiplashes between frenzied and complete duldrums. 
Right now, she's in a frenzy, and the "dang computer" is broke to boot. The blacksmith is driving her 
up the wall pestering her about his anvil, and she's done her best to narrow down the list to three suspects:

*head-case Henry, a regular of the cells down the hall. He's done just about everything you can do to end up in the clink.

*tail-bone Teresa, an old accomplice of Henry's who recently returned to town after a stint pick-pocketing tourists in the big city.

*sort-a uniq-ue Sam, a complete unknown who's vocabulary consists of a few phrases, repeated ad nauseam.

She asks if you could talk to them, and possibly make sense of their statements.
It's pretty difficult to understand what they are saying on the best of days, and this is far from that.

****************************************************************************************************************************************
> You will receive statements from all three of the suspects, but only the proper one should be redirected into the confession.txt file.
> All statements should be piped into the 'statment.txt' file in the Cell_[num] directory. After creating each statement file, return to
  talk to the sheriff to confirm that you properly formatted the statement.
> You must use terminal commands to parse the lunatic's ramblings so you only have their statement, and nothing else.
  It would be poor form to waste the sheriff's time!
> Once one of your 'statement.txt' files contains the confession, copy it to this directory with the name 'confession.txt'
****************************************************************************************************************************************

sheriff_intro

touch .sheriff_intro

elif ! test -f confession.txt ; then
	if test -f Hallway/Cell_1/statement.txt ; then
		if [[ 7 -eq $(cat Hallway/Cell_1/statement.txt | wc -l) ]] ; then
			cat << henry_good
Nicely done getting head-case Henry's statement, and properly formatted too. 
Remember to drop it on my desk [in this directory] as a confession [named confession.txt] 
if he was the culprit. He's a slippery one.	

henry_good
		else
			cat << henry_bad
Looks like you don't quite have Henry's statement quite right. You mind going back there and
trying to get something out of him again?
henry_bad
		fi
	fi
	if test -f Hallway/Cell_2/statement.txt ; then
		if [[ 9 -eq $(cat Hallway/Cell_2/statement.txt | wc -l) ]] ; then
			cat << teresa_good
Nicely done getting tail-bone Teresa's statement, and properly formatted too. 
Remember to drop it on my desk [in this directory] as a confession [named confession.txt] 
if she was the culprit. She's a wiley one.	

teresa_good
		else
			cat << teresa_bad
Looks like you don't quite have Teresa's statement quite right. You mind going back there and
trying to get something out of her again?
teresa_bad
		fi
	fi
	if test -f Hallway/Cell_3/statement.txt ; then
		if cmp -s ".sam_stmt" "Hallway/Cell_3/statement.txt"; then
			cat << sam_good
Nicely done getting sort-a uniq-ue Sam's statement, and properly formatted too. 
Remember to drop it on my desk [in this directory] as a confession [named confession.txt] 
if he was the culprit. He's a strange one.	
sam_good
		else
			cat << sam_bad
Looks like you don't quite have Sam's statement quite right. You mind going back there and
trying to get something out of him again?
sam_bad
		fi
	fi
		cat << still_waiting
The sheriff looks up, back down, continues idly clicks around the computer.

still_waiting

elif ! test -f .sheriff_sad ; then

	cat << done
The sheriff is reading over the confession when you walk up to her desk. She's shaking her head
and clicking her tongue, with an even larger than usual frown on her face. As it turns out, 
the carpenter's her brother, and it's rocked her to the core to see him mixed up in something 
like this. 

That doesn't mean she's not ready to do what needs to be done, however, and she tasks you with 
the unfortunate duty of questioning the carpenter and finding the anvil. She gives you an offiical
arrest warrant, a large piece of paper with all sorts of formalities on it. After she's done talking
to you, she puts her head in her hands and lets out a deep sigh. It's clear that's all you're going
to get from her.
done

touch .sheriff_sad

else
	echo "The sheriff doesn't even look up from her work when you walk in."

fi

#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# Hmm, that didn't work.