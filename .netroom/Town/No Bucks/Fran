#!/bin/bash
#
# If you are reading this, you have wandered out of bounds
# and are reading the code that drives the game.
#
#                    Congratulations!
#
# Learning Linux is all about curiosity, so read this code and see
# if you can figure out what it does.
#
# When you're ready to continue playing the game, though, stick to
# the scrolls. If you're stuck, ask your instructor.
# We're happy to provide hints.
#

source ~/.phrases
ONE=$(($ID+1**2))
TWO=$(($ID+2**2))
MYNS="town2"
MYIP="10.0.130.121"
BADIP="20.20.20.10"
MYGATEWAY="10.0.130.1"
TEST="10.0.140.42"
# $1: Namespace for the setup
# $2: IP Address for the setup
# $3: Bad IP, if there is one
# $4: Gateway Address
# $5: Location
# $6: Greeting, otherwise empty
generic_setup "$MYNS" "$MYIP" "$BADIP" "$MYGATEWAY" "Town" "$(fran_greeting)"
if [ -f .done ]; then
    if ! [ -f .task_done ]; then
        if ! [ -f .first ]; then
            cafe_next_task
            touch .first
        else
            printf "\nDid you figure out what port Florian is using? (y / n) "
            read RESP
            if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ]; then
                nc -w1 -v -n 10.0.110.25 10000-20000 1> /dev/null 2>.out.tmp
                PORT=$(grep "succeeded" .out.tmp | cut -d ' ' -f 4)
                rm .out.tmp
                printf "Great, what port is it on: "
                read RESP
                if [ "$RESP" = "$PORT" ]; then
                    printf "Excellent!! "
                    if [ -f message.txt ]; then
                        printf "And I see you saved the message.  Let's take a look...\n"
                        nc -n 10.0.110.25 $PORT > .out.tmp
                        DIFF=$(diff .out.tmp message.txt)
                        if [ -z $DIFF ]; then
                            cafe_nc_success
                            touch .task_done
                            CHECKPOINT="$(get_secrets 58)_$(get_secrets 59)"
                            sed "s/Town2Task/$CHECKPOINT/" ~/status > ~/status.tmp && mv ~/status.tmp ~/status
                            chmod +x ~/status
                        else
                            printf "That doesn't sound like something Florian would say.  You may want to check again.\n\n"
                        fi
                    else
                        printf "Now do you think you could save that message?  I'm a tad busy at work here.\n\n"
                    fi
                else
                    cafe_nc_failure
                    prompt_for_hint
                    read RESP
                    if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ]; then
                        cafe_nc_hint
                    else
                        printf "Okay, if you're sure.\n\n"
                    fi
                fi
            else
                prompt_for_hint
                read RESP
                if [ "$RESP" = "y" ] || [ "$RESP" = "Y" ]; then
                    cafe_nc_hint
                else
                    printf "Okay, if you're sure.\n\n"
                fi
            fi    
        fi
    else
        complete
    fi
fi
